/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */
@import "tailwindcss";

/**
 * Import plugins
 */
@plugin "@tailwindcss/typography";

/** 
 * Theme 
 * Customize Tailwind theme here
 */
@theme {
    --color-primary: #f3c545; /* Votre couleur de base */
    --color-secondary: #106b95;
    --color-surface: #f6ede0;
    --color-surface-light: #fffdf9;
}

@layer base {
    :root {
        --breakout-max-width: 100%;
        --content-max-width: 100%;
    }

    @media (min-width: 640px) {
        :root {
            --padding-inline: 2rem;
        }
    }

    @media (min-width: 768px) {
        :root {
            --padding-inline: 4rem;
        }
    }

    body {
        background-color: var(--color-surface-light);
    }

    img {
        @apply w-full max-w-full;
    }
}

/** 
 * Components 
 * Create your own components here
 */
@layer components {
    /* Buttons */
    .button {
        --transition: 0.2s ease-in-out;
        --button-radius: 100vmax;
        isolation: isolate;
        position: relative;
        display: inline-flex;
        align-items: center;

        &::before,
        &::after {
            content: "";
            position: absolute;
            inset: 0;
            border-radius: 100vmax;
            transition: transform var(--transition), opacity var(--transition);
        }

        &::before {
            border: 1px solid var(--color-yellow-950);
            transform: translate(4px, 2px) rotate(2deg);
        }
        &::after {
            border: 1px solid var(--color-yellow-950);
            transform: translate(-4px, -2px) rotate(-2deg);
            z-index: -1;
        }
    }

    .button:hover,
    .button:focus-visible {
        &::before,
        &::after {
            transform: translate(0, 0) rotate(0);
            opacity: 0;
        }
    }

    .button.disabled,
    .button[aria-disabled="true"] {
        cursor: not-allowed;
        opacity: 0.5;
    }

    /* Grid container */
    .content-grid {
        display: grid;
        width: 100%;
        column-gap: 0;
        --max-width: 800px;
        --padding-inline: 1rem;
        --content-max-width: var(--max-width);
        --breakout-max-width: calc(var(--max-width) + 20rem);
        --breakout-size: calc(
            (var(--breakout-max-width) - var(--content-max-width)) / 2
        );

        grid-template-columns:
            [full-width-start] minmax(var(--padding-inline), 1fr)
            [breakout-start] minmax(0, var(--breakout-size))
            [content-start] min(
                100% - var(--padding-inline) * 2,
                var(--content-max-width)
            )
            [content-end]
            minmax(0, var(--breakout-size)) [breakout-end]
            minmax(var(--padding-inline), 1fr) [full-width-end];
    }

    .content-grid > .breakout {
        grid-column: breakout;
    }

    .content-grid > .full-width {
        grid-column: full-width;
    }
    .content-grid > :where(:not(.breakout, .full-width)) {
        grid-column: content;
    }

    /* Social links */
    .social-links {
        display: flex;
        justify-content: center;
        gap: 1em;
        margin-top: 1em;
    }
    .social-links a {
        text-decoration: none;
        color: rgb(var(--gray));
    }
    .social-links a:hover {
        color: rgb(var(--gray-dark));
    }
}

/** 
 * Utilities 
 * Create your own utilities here
 */
@layer utilities {
    .sr-only {
        border: 0;
        padding: 0;
        margin: 0;
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        /* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
        clip: rect(1px 1px 1px 1px);
        /* maybe deprecated but we need to support legacy browsers */
        clip: rect(1px, 1px, 1px, 1px);
        /* modern browsers, clip-path works inwards from each corner */
        clip-path: inset(50%);
        /* added line to stop words getting smushed together (as they go onto separate lines and some screen readers do not understand line feeds as a space */
        white-space: nowrap;
    }
}
